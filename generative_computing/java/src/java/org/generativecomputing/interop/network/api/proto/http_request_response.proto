/* Copyright 2023, The Generative Computing Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License
==============================================================================*/
syntax = "proto3";

package src.java.org.generativecomputing.interop.network.api.proto;

option java_package = "src.java.org.generativecomputing.interop.network.api.proto";
option java_outer_classname = "HttpRequestResponseProto";
option java_multiple_files = true;

// Options specifying configuration for an HTTP request.
message HttpOptions {
  // The fully-formed URL for the server request.
  // Required.
  optional string url = 1;

  // Enums for Http method.
  // Supported types are GET and POST.
  enum HttpMethod {
    DEFAULT = 0;
    GET = 1;
    POST = 2;
  }

  // The HTTP method to use. If not set, defaults to GET method.
  // Required.
  optional HttpMethod http_method = 2;

  message HttpHeader {
    // The name of the HTTP header.
    optional string name = 1;

    // The value of the HTTP header.
    optional string value = 2;
  }

  // The HTTP headers to include in the network request.
  repeated HttpHeader http_headers = 3;

  // Number of redirects to follow.
  // Optional.
  optional int32 redirects_to_follow = 4;
}

// An HTTP request to an HTTP client. Contains query params or post body
// depending on whether GET or POST HTTP method is used in the
// {@link HttpOptions}.
message HttpRequest {
  message QueryParam {
    optional string param = 1;
    optional string value = 2;
  }

  // Query parameters to append.
  // Optional.
  repeated QueryParam query_params = 1;

  message PostBody {
    // The content type of the data in the post body.
    optional string content_type = 1;

    // The data to be sent in post.
    optional bytes data = 2;
  }

  // The POST body.
  // Required if POST HttpMethod is used in HttpOptions.
  optional PostBody post_body = 4;
}

// An HttpResponse from an HttpClient.
message HttpResponse {
  optional bytes response = 1;
  // optional string content_type = 2;
}
